<template>
	<view class="checktask">

		<u-sticky :offset-top="offset">
			<!-- <view class="checktask-top">
				<view class="action" @click="newchecktask()">
					新建任务
				</view>
			</view>
			<u-subsection :list="sublist" :current="curNow" @change="sectionChange" bg-color="#a5deda" button-color="#6ecac3"
			 active-color="#fff" height="80" inactive-color="#fff"></u-subsection> -->
		</u-sticky>

		<view class="checktask-content">
			<view class="empty" v-if="list.length <= 0">
				<image src="../../static/nodata.png" mode=""></image>
				<view class="empty-tips">
					暂无数据
				</view>
			</view>
			<scroll-view scroll-y style="height:60vh;width: 100%;" @scrolltolower="onreachBottom">
				<view class="part" v-for="(item,index) in list">
					<view class="top-part">
						<view class="left">
							<view class="name">
								{{item.name}}<u-badge type="error" :count="item.count" class="badge-msg"></u-badge>
							</view>
							<view class="detail">
								<view class="title">
									检查准则：
								</view>
								<view class="size">
									{{item.standard}}
									
								</view>
							</view>
							<view class="detail">
								<view class="title">
									计划时间：
								</view>
								<view class="time">
										{{$u.timeFormat(item.startdate, 'yyyy-mm-dd')}}
									<text>至</text>
									{{$u.timeFormat(item.enddate, 'yyyy-mm-dd')}}
								</view>
							</view>
						
						</view>
						<view class="right">
							<view class="" @click="openright(index)">
								<u-icon name="arrow-left-double" color="#999999" size="32" @click(index)></u-icon>
							</view>
							<!-- 
							<view class="" @click="openright(index)">
								<u-icon name="arrow-right-double" color="#2979ff" size="28" @click(index)></u-icon>
							</view> -->

						</view>
					</view>

					<view class="action-part">
						<view class="left">
							<view class="company-part">
								<image src="../../static/company.png" mode=""></image>
								<view class="company">
									{{item.company}}
								</view>							
							</view>
							<view class="prograss">
									<u-line-progress :striped="true" :percent="item.prograss" :striped-active="true"></u-line-progress>
							</view>
						</view>
						<view class="right">
							<!--  #cdcdcd未开始，#2979ff进行中,#19be6b已完成, #fa3534已延期,#ff9900延期已完成-->
							<view class="state gray" v-if="item.status==0">
								未开始
							</view>
							<view class="state blue" v-if="item.status==1">
								进行中
							</view>
							<view class="state green" v-if="item.status==2">
								已完成
							</view>
							<view class="state red" v-if="item.status==3">
								已延期
							</view>
							<view class="state yellow" v-if="item.status==4">
								延期已完成
							</view>
						</view>						
					</view>
				</view>
				<u-loadmore @loadmore="loadmore" bg-color="none" :status="status" :icon-type="iconType" margin="30" :load-text="loadText"
				 v-if="list.length >=1" />
				
			</scroll-view>
			
		</view>
	


		<u-toast ref="uToast" />
	</view>
</template>

<script>
	export default {
		props: {
			offset: {
				type: Number,
				default: 0
			},
		},
		data() {
			return {
				// 头部导航
				curNow: 0, //当前选中
				subIndex: 0, //当前选中内容
				sublist: [{
						name: '未归档'
					},
					{
						name: '已归档'
					}
				],
				actionStyle: {
					backgroundColor: '#4abdb4',
					color: '#fff',
					margin: '0',
					width: '100rpx',
					height: '68rpx',
					lineHeight: '68rpx',
					borderRadius: '0 10rpx 10rpx 0'
				},
				list: [
					{						
						name: 'xxxxx任务',
						standard:'电网安全检查',						
						startdate: '1581170184',
						enddate: '1581170184',
						company:'xxx公司',
						prograss:'70',
						status:'0',
						count:'22',
					},
					{
						name: 'xxxxx任务',
						standard:'电网安全检查',						
						startdate: '1581170184',
						enddate: '1581170184',
						company:'xxx公司',
						prograss:'100',
						status:'1',
						count:'22',
					},
					{
						name: 'xxxxx任务',
						standard:'电网安全检查',						
						startdate: '1581170184',
						enddate: '1581170184',
						company:'xxx公司',
						prograss:'44',
						status:'2',
						count:'22',
					},
					{
						name: 'xxxxx任务',
						standard:'电网安全检查',						
						startdate: '1581170184',
						enddate: '1581170184',
						company:'xxx公司',
						prograss:'6',
						status:'3',
						count:'22',
					},
					{
						name: 'xxxxx任务',
						standard:'电网安全检查',						
						startdate: '1581170184',
						enddate: '1581170184',
						company:'xxx公司',
						prograss:'70',
						status:'4',
						count:'22',
					},
					{
						name: 'xxxxx任务',
						standard:'电网安全检查',						
						startdate: '1581170184',
						enddate: '1581170184',
						company:'xxx公司',
						prograss:'50',
						status:'5',
						count:'22',
					},
				],
				


				// 分页
				status: 'loadmore', // 下拉加载状态
				iconType: 'flower',
				loadText: {
					loadmore: '点击或上拉加载更多',
					loading: '正在加载...',
					nomore: '我也是有底线的'
				},
				pages: 1, //实际页数
				pageNum: 1, //当前下拉加载页数
				pageSize: 10, //每页的条数
			}
		},
		methods: {
			//搜索时触发
			searchchecktask() {
				console.log(this.checktaskName, 'checktaskName')
			},
			//搜索时点击清除按钮触发
			clear() {
				console.log(this.checktaskName, 'checktaskName')
			},
			getlist() {
				this.status = 'loading';
				const recordsList = this.list; //模拟请求到的数据
				if (this.pageNum > 1) {
					this.list = this.list.concat(recordsList);
				} else {
					this.list = recordsList;
					this.status = 'nomore';
				}
				uni.stopPullDownRefresh();
				this.pages = 3; //模拟页数最大等于3
				this.pageNum++;
				if (this.pageNum > this.pages) {
					this.status = 'nomore';
				}

			},
			// 上拉加载
			onreachBottom(e) {
				if (this.pageNum > this.pages) {
					this.status = 'nomore';
					return;
				}
				this.getlist();
			},
			loadmore() {
				if (this.pageNum > this.pages) {
					this.status = 'nomore';
					return;
				}
				this.getlist();
			},
			//批量管理
			batch() {
				this.showCheck = !this.showCheck
				if (this.showCheck) {
					this.batchtitle = '管理完成'
				} else {
					this.batchtitle = '批量管理'
				}
			},
			//选中单个
			check(index) {
				let checkLength = '0';
				this.list[index].checked = !this.list[index].checked;
				this.list.map(item => {
					if (item.checked) {
						checkLength++;
					}
				})
				if (checkLength == this.list.length) {
					this.all = true;
				} else {
					this.all = false;
				}
				this.checkLength = checkLength;
			},
			//全选
			checkAll() {
				if (this.all == true) {
					this.list.map(val => {
						val.checked = false;
					})
				} else {
					this.list.map(val => {
						val.checked = true;
					})
				}
			},

			//批量删除
			batchDel() {
				if (this.checkLength == '0') {
					this.$refs.uToast.show({
						title: '请至少选择一项标准进行删除',
						type: 'warning'
					})
					return;
				}
				this.delAllshow = true
			},
			delAllconfirm() {
				this.list.map((item, index) => {
					if (item.checked) {
						this.list.splice(index, this.checkLength)
					}
				})
				this.delAllshow = false
			},
			//下发或批量下发
			allot(type) {
				if (type == 'single') {
					this.showAllot = true;
					this.allotitle = '下发';

				}
				if (type == 'batch') {
					if (this.checkLength == '0') {
						this.$refs.uToast.show({
							title: '请至少选择一项标准进行下发',
							type: 'warning'
						})
						return;
					}
					this.showAllot = true;
					this.allotitle = '批量下发';
				}
			},
			// 重命名
			reviewname(index) {
				this.renameshow = true;
				console.log(index, 'index')
				this.renameindex = index;
			},
			//确定重命名
			renameconfirm() {

				if (!/[u4e00-u9fa5_a-zA-Z0-9_]{2,30}/.test(this.renamevalue)) {
					this.$refs.uToast.show({
						title: '名称长度范围为2-30个字符',
						type: 'warning'
					})
					this.$refs.uModal.clearLoading();
					return false;
				} else {
					console.log(this.renameindex, 'this.renameindex')
					this.list[this.renameindex].name = this.renamevalue;
					this.renameshow = false;
				}

			},
			// 启用
			startUse(Index) {
				this.list[this.stopIndex].used = '1';
			},
			// 停用
			stopUse(index, name) {

				this.stopshow = true;
				this.stopIndex = index;
				this.Title = name;
			},
			stopconfirm() {
				this.list[this.stopIndex].used = '1';
				this.stopshow = false;
			},
			//删除
			del(index, name) {
				this.delshow = true;
				this.delIndex = index;
				this.Title = name;
			},
			delconfirm() {
				this.list.splice(this.delIndex, '1')
				this.delshow = false;
			},
			//下发弹框
			// 人员
			openPerson() {
				this.showPersonList = true;
			},
			personSheetCallback(index) {
				this.person = this.personSheetList[index].text;
			},
			addPerson() {
				if (this.personList.length == 0) {
					this.personList.push({
						name: this.person
					})
				} else {
					this.personList.map(e => {
						if (e.name != this.person) {
							this.personList.push({
								name: this.person
							})
						} else {
							this.$refs.uToast.show({
								title: '无需重复添加',
								type: 'warning'
							})
							return false;
						}
					})
				}


			},
			delPerson(index) {
				this.personList.splice(index, 1)
			},
			checkboxChange(e) {

			},
			// 选中任一checkbox时，由checkbox-group触发
			checkboxGroupChange(e) {
				this.hasList = [];


				e.map(item => {
					this.hasList.push({
						name: item
					});
				})
				if (e.length == this.checkList.length) {
					this.listchoose = true;
				} else {
					this.listchoose = false;
				}
			},
			// 全选
			checkedAllList() {
				this.hasList = [];
				if (this.listchoose == true) {
					this.checkList.map(val => {
						val.checked = true;
						this.hasList.push({
							name: val.name
						})

					})
				} else {
					this.list.map((val, index) => {
						val.checked = false;
						this.hasList.splice(index, 1)
					})
				}

			},
			delChecklist(index) {
				this.hasList.splice(index, 1)
			},
			//标准关联
			openRelevance() {
				this.showRelevanceList = true;
			},
			relevanceSheetCallback(index) {
				this.relevance = this.relevanceSheetList[index].text;
			},
			addrelevance() {
				if (this.addrelevanceList.length == 0) {
					this.addrelevanceList.push({
						name: this.relevance
					})
				} else {
					this.addrelevanceList.map(e => {
						if (e.name != this.relevance) {
							this.addrelevanceList.push({
								name: this.relevance
							})
						} else {
							this.$refs.uToast.show({
								title: '无需重复添加',
								type: 'warning'
							})
							return false;
						}
					})
				}
			},
			deladdrelevance() {
				this.addrelevanceList.splice(index, 1)
			},
			sure() {
				this.showAllot = false;
			},
			cancel() {
				this.showAllot = false;
			},
			close() {
				this.showAllot = false;
			},
			newchecktask() {

			},

			upload() {

			}






		}
	}
</script>

<style lang="less" scoped>
	/deep/.u-content {
		border-radius: 10rpx 0 0 10rpx !important;
	}

	.checktask {
		background: #F8F8F8;

		.checktask-top {
			display: flex;
			justify-content: space-around;
			padding: 20rpx 30rpx;
			background: #FFFFFF;

			.action {
				width: 30%;
				background: #4abdb4;
				border-radius: 10rpx;
				color: #FFFFFF;
				font-size: 30rpx;
				text-align: center;
				height: 60rpx;
				line-height: 60rpx;
			}
		}

		.subsearch {
			padding: 20rpx 30rpx;
			background: #FFFFFF;
		}

		.checktask-content {
			padding: 30rpx;
			padding-bottom: 100rpx;

			.part {
				padding: 20rpx;
				margin-bottom: 20rpx;
				border-radius: 20rpx;
				border: 2rpx solid #f6f6f6;
				background: #FFFFFF;

				.top-part {
					display: flex;
					justify-content: space-between;
					align-items: center;
					margin: 10rpx 0;

					.left {
						.name{
							color: #333333;
							font-size: 32rpx;
							margin-bottom: 20rpx;
							
						}
						
						.detail{
							display: flex;
							margin-bottom: 20rpx;
							height: 50rpx;
							line-height: 50rpx;
							.title{
								font-size: 30rpx;
								color: #333333;
							}
							.size{
								color: #606266;
								font-size: 28rpx;
							}
							.time{
								color: #999999;
									font-size: 28rpx;
								text{
									color: #606266;
									margin:0 10rpx;
								}
							}
						}						
					}

					.right {
						width: 100rpx;
						text-align: right;

						.name {
							width: 100%;
							flex: 1;
							font-size: 30rpx;
							color: #333333;
							overflow: hidden;
							display: -webkit-box;
							text-overflow: ellipsis;
							-webkit-line-clamp: 2;
							-webkit-box-orient: vertical;
							line-height: 50rpx;
						}

						.detail {
							width: 100%;
							display: flex;
							justify-content: space-between;
							line-height: 50rpx;

							.size {
								font-size: 28rpx;
								color: #606266;
							}

							.time {
								font-size: 24rpx;
								color: #999999;
							}
						}
					}
				}

				.action-part {
					display: flex;
					font-size: 28rpx;
					border-top: 2rpx solid #f6f6f6;
					padding-top: 30rpx;
					justify-content: space-between;
					align-items: center;
					.left{
						width: 60%;
						
						.company-part{
							display: flex;
							image{
								width: 50rpx;
								height: 50rpx;
								margin-right: 20rpx;
							}
							.company{
								font-size: 30rpx;
								color: #333333;
								
							}
						}
						.prograss{
							margin: 20rpx 0;
						}
					}
					.right{
						.state {							
							text-align: center;						
							margin-right: 20rpx;
							border-radius: 60rpx;
							color: #FFFFFF;
							padding: 10rpx 20rpx;
							font-size: 28rpx;
						}
						.red{
							
							background: #FA3534;
						}
						.yellow{
							
							background: #ff9900;
						}
						.blue{
							
								background: #2979FF;
						}
						
						.gray {
							
								background: #cdcdcd;
						}
						
						.green {
						
								background: #18b566;
						}
					}

					
				}

			}
		}

		.bottom {

			position: fixed;
			width: 100%;
			background: #FFFFFF;
			height: 100rpx;
			line-height: 100rpx;
			box-shadow: 0 -6rpx 10rpx rgba(0, 0, 0, 0.15);
			bottom: 0;
			z-index: 99;

			.check-bottom {
				display: flex;
				justify-content: space-between;
				align-items: center;
				padding: 0 30rpx;

				.left {
					display: flex;
					color: #2979ff;
					font-size: 32rpx;

				}

				.right {
					display: flex;
					justify-content: flex-end;

					.batch {

						background: #19be6b;
						color: #FFFFFF;
						border-radius: 40rpx;
						height: 60rpx;
						line-height: 60rpx;
						text-align: center;
						margin-right: 20rpx;
						padding: 0 20rpx;
						box-shadow: 0 6rpx 6rpx #71d5a1;

					}

					.stop {
						background: #ff9900;
						margin: 20rpx 0;
					}

					.del {
						background: #fa3534;
						box-shadow: 0 6rpx 6rpx #fab6b6;
					}
				}
			}

		}

		.model {
			padding: 30rpx;

			.rename {
				margin: 20rpx 0;
			}

			.stop {
				font-size: #333333;
				line-height: 50rpx;
				font-size: 32rpx;
				margin: 20rpx 0;
			}

			.tips {
				font-size: 28rpx;
				color: #999999;
			}
		}

		//下发
		.roleModel {
			width: 100%;
			position: relative;
			padding-top: 90rpx;
			padding-bottom: 120rpx;


			.roleTop {
				height: 90rpx;
				line-height: 90rpx;
				background: #4abdb4;
				color: #FFFFFF;
				font-size: 34rpx;
				text-align: center;
				position: fixed;
				top: 0rpx;
				width: 100%;
				z-index: 99;
			}

			.content {

				padding: 30rpx;
			}

			.choose {
				display: flex;
				justify-content: flex-start;
				align-items: center;
				margin: 40rpx 0 20rpx;

				.title {
					color: #333333;
					font-size: 30rpx;
					margin-right: 10rpx;
				}

				.input_part {
					margin-right: 10rpx;
					width: 100%;
					flex: 1;
				}

				.add {
					width: 100rpx;
					padding: 0 10rpx;
					height: 70rpx;
					line-height: 70rpx;
					font-size: 30rpx;
					border: 2rpx solid #dcdfe6;
					border-radius: 10rpx;
					color: #4abdb4;
					text-align: center;
				}
			}

			.hasChoosed {
				border: 2rpx solid #f6f6f6;
				padding: 20rpx;
				margin: 20rpx 0;
				border-radius: 20rpx;

				width: 100%;

				.has {
					display: inline-flex;
					justify-content: space-between;
					align-items: center;
					text-align: center;
					background: #F8F8F8;
					width: 25%;
					padding: 10rpx;
					border-radius: 10rpx;
					margin: 10rpx;

					.name {

						font-size: 28rpx;
					}

					.icon {
						margin-left: 10rpx;
					}
				}
			}

			.range {
				margin: 20rpx 0;

				.title {
					font-size: 32rpx;
					color: #333333;
					text-align: center;
					width: 100%;
					height: 80rpx;
					line-height: 80rpx;
				}

				.part {
					display: flex;
					justify-content: space-between;

					.left {
						border: 2rpx solid #f6f6f6;
						width: 50%;

						.top {
							display: flex;
							justify-content: space-between;
							align-items: center;
							font-size: 30rpx;
							color: #333333;
							padding: 10rpx 20rpx;
						}

						.list {
							padding: 10rpx 20rpx;

							/deep/.u-checkbox {
								border-bottom: 2rpx solid #f6f6f6;
							}

							.job {
								color: #007AFF;
								margin-right: 10rpx;

							}

							text {
								font-size: 28rpx;
								color: #606266;

							}
						}
					}

					.right {
						width: 40%;
						border: 2rpx solid #f6f6f6;

						.top {
							font-size: 30rpx;
							color: #4abdb4;
							padding: 10rpx 20rpx;
						}

						.list {
							padding: 10rpx 20rpx;

							.has {
								display: flex;
								background: #f6f6f6;
								padding: 10rpx;
								justify-content: space-between;
								align-items: center;
								border-radius: 10rpx;
								margin-top: 10rpx;

								.name {
									font-size: 28rpx;
								}

								.icon {
									margin: 0 10rpx;
								}
							}
						}
					}
				}
			}

			.roleAction {
				position: fixed;
				bottom: 0;
				height: 100rpx;
				line-height: 100rpx;
				display: flex;
				justify-content: space-around;
				font-size: 32rpx;
				width: 100%;
				background: #FFFFFF;

				.cancel {
					width: 40%;
					border: 2rpx solid #dedede;
					color: #606266;
					text-align: center;
					height: 80rpx;
					line-height: 80rpx;
					border-radius: 80rpx;
				}

				.sure {
					width: 40%;
					color: #FFFFFF;
					background: #4abdb4;
					text-align: center;
					height: 80rpx;
					line-height: 80rpx;
					border: 2rpx solid #4abdb4;
					border-radius: 80rpx;
				}
			}
		}


	}
</style>
